@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Students";
    ViewData["BodyClass"] = "dark-mode";
}

<style>
    body {
        background-color: #333; /* Dark background for the entire page */
        color: #f1f1f1; /* Light text color for readability */
        min-height: 100vh; /* Ensure the body covers the full height */
    }

    .container {
        background-color: #444; /* Darker background for the container */
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #555; /* Slightly lighter for odd rows */
    }

    .table-dark,
    .table-dark > th,
    .table-dark > td {
        background-color: #222; /* Dark background for the table */
        border-color: #333; /* Dark border for the table */
    }

    .btn-primary {
        background-color: #007bff; /* Primary button color */
        border-color: #007bff;
    }

    .btn-secondary {
        background-color: #6c757d; /* Grey color for disabled buttons */
        border-color: #6c757d;
    }

    .btn-success {
        background-color: #28a745; /* Success button color */
        border-color: #28a745;
    }

    .btn-warning {
        background-color: #ffc107; /* Warning button color */
        border-color: #ffc107;
        color: #333; /* Dark text for contrast */
    }

    .btn-info {
        background-color: #17a2b8; /* Info button color */
        border-color: #17a2b8;
    }

    .btn-danger {
        background-color: #dc3545; /* Danger button color */
        border-color: #dc3545;
    }
</style>

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <p>
        <a asp-page="Create" class="btn btn-success">Create New</a>
    </p>

    <form asp-page="./Index" method="get" class="form-inline mb-3">
        <div class="form-group">
            <label for="SearchString" class="mr-2">Find by name:</label>
            <input type="text" id="SearchString" name="SearchString" class="form-control" value="@Model.CurrentFilter"/>
            <button type="submit" class="btn btn-primary ml-2">Search</button>
            <a asp-page="./Index" class="btn btn-secondary ml-2">Back to full List</a>
        </div>
    </form>

    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter" class="text-light">
                    @Html.DisplayNameFor(model => model.Students[0].LastName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter" class="text-light">
                    @Html.DisplayNameFor(model => model.Students[0].FirstMidName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter" class="text-light">
                    @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                </a>
            </th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstMidName)</td>
                <td>@Html.DisplayFor(modelItem => item.EnrollmentDate)</td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-page="./Details" asp-route-id="@item.ID" class="btn btn-info btn-sm">Details</a>
                    <a asp-page="./Delete" asp-route-id="@item.ID" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
    }

    <div class="pagination">
        <a asp-page="./Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
           asp-route-currentFilter="@Model.CurrentFilter"
           class="btn btn-primary @prevDisabled @(prevDisabled == "disabled" ? "btn-secondary" : "")">
            Previous
        </a>
        <a asp-page="./Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
           asp-route-currentFilter="@Model.CurrentFilter"
           class="btn btn-primary @nextDisabled @(nextDisabled == "disabled" ? "btn-secondary" : "")">
            Next
        </a>
    </div>
</div>